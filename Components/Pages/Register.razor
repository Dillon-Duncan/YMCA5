@page "/register"
@using Microsoft.Extensions.Logging
@using YMCA3.Models
@using YmcaApiClient
@inject NavigationManager NavigationManager
@inject YmcaApiClientService ApiClientService
@inject ILogger<Register> Logger

<style>
    /* Partial-page background */
    .background {
        position: fixed;
        top: 0;
        left: 240px; /* Adjust this value to start the background image to the right of the sidebar */
        width: calc(100% - 200px); /* Reduce width to account for sidebar width */
        height: 100%;
        background-image: url('/blur-background.ico');
        background-size: cover;
        background-repeat: no-repeat;
        background-position: center;
        z-index: -1; /* Place background behind the content */
    }

    /* Content area styling */
    .content {
        position: relative;
        z-index: 1; /* Ensure content is on top of the background */
    }
</style>

<!-- Background Image Div -->
<div class="background"></div>

<div class="content px-4 d-flex flex-column justify-content-center align-items-center" style="height: 100vh; margin-bottom: 25px;">

    <div class="text-center mb-4">
        <h2>Register</h2>
    </div>

    <div class="w-100" style="max-width: 400px;">
        <EditForm Model="_user" OnValidSubmit="SaveUser">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <InputText id="userFullname" class="form-control form-control-lg shadow" placeholder="Full name" @bind-Value="_user.FullName" />
                <ValidationMessage For="@(() => _user.FullName)" />
            </div>

            <div class="mb-3">
                <InputText id="userEmail" class="form-control form-control-lg shadow" placeholder="Email" @bind-Value="_user.EmailAddress" />
                <ValidationMessage For="@(() => _user.EmailAddress)" />
            </div>

            <div class="mb-3">
                <InputText id="userPhoneNumber" class="form-control form-control-lg shadow" placeholder="Phone Number" @bind-Value="_user.PhoneNumber" />
                <ValidationMessage For="@(() => _user.PhoneNumber)" />
            </div>

            <div class="mb-3">
                <InputText id="userCity" class="form-control form-control-lg shadow" placeholder="City" @bind-Value="_user.City" />
                <ValidationMessage For="@(() => _user.City)" />
            </div>

            <div class="mb-3">
                <InputText id="userPassword" type="password" class="form-control form-control-lg shadow" placeholder="Password" @bind-Value="_user.Password" />
                <ValidationMessage For="@(() => _user.Password)" />
            </div>

            <div class="mb-3">
                <InputText id="userConfirmPassword" type="password" class="form-control form-control-lg shadow" placeholder="Confirm Password" @bind-Value="_confirmPassword" />
                <ValidationMessage For="@(() => _confirmPassword)" />
            </div>

            <div class="d-flex justify-content-center mb-4">
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="" id="rememberMe" checked />
                    <label class="form-check-label" for="rememberMe"> Remember me </label>
                </div>
            </div>

            <div class="text-center">
                <button type="submit" data-mdb-button-init data-mdb-ripple-init class="btn btn-primary btn-block btn-lg shadow" style="background-color: #EC1F26; border-color: #EC1F26;">Register</button>
            </div>
        </EditForm>
        @if (!string.IsNullOrEmpty(_errorMessage))
        {
            <div class="alert alert-danger mt-3">@_errorMessage</div>
        }
    </div>
</div>

@code {
    private YmcaApiClient.User _user = new YmcaApiClient.User();
    private string _confirmPassword;
    private string _errorMessage;

    private async Task SaveUser()
    {
        if (_user.Password != _confirmPassword)
        {
            _errorMessage = "Passwords do not match.";
            return;
        }

        try
        {
            var response = await ApiClientService.AddUser(_user);
            if (response.IsSuccessStatusCode)
            {
                NavigationManager.NavigateTo("/dashboard");
            }
            else
            {
                _errorMessage = "Registration failed. Please try again.";
                Logger.LogError("Registration failed with status code: {StatusCode}", response.StatusCode);
            }
        }
        catch (Exception ex)
        {
            _errorMessage = $"An error occurred: {ex.Message}";
            Logger.LogError(ex, "An error occurred during registration");
        }
    }
}