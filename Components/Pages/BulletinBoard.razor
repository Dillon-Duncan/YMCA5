@page "/bulletinboard"
@using Microsoft.Extensions.Logging
@using YMCA3.YmcaApiClient
@using YMCA3.YmcaApiClient.Models.ApiModels
@inject YmcaApiClientService ApiClientService
@inject ILogger<BulletinBoard> Logger


<div class="content px-4 d-flex flex-column justify-content-center align-items-center" style="height: 100vh; margin-bottom: 25px;">
    <div class="text-center mb-4">
        <h2>Bulletin Board</h2>
    </div>
    <div class="border p-3 rounded" style="max-height: 30vh; min-height= 10vh; min-width= 70vh; overflow-y: auto;">
        @if (bulletins.Any())
        {
            <ul class="list-unstyled">
                @foreach (var bulletin in bulletins)
                {
                    <li class="mb-3">
                        <div class="d-flex flex-column">
                            <p class="mb-2">@bulletin.Message</p>
                            <small class="text-muted">@bulletin.Date.ToString("MMMM d, yyyy HH:mm:ss")</small>
                        </div>
                    </li>
                }
            </ul>
        }
        else
        {
            <p>No messages posted yet.</p>
        }
    </div>
</div>

@code {
    private List<Bulletin> bulletins = new();
    private string newMessage;
    private string _errorMessage;

    protected override async Task OnInitializedAsync()
    {
        await LoadBulletins();
    }

    private async Task LoadBulletins()
    {
        try
        {
            var result = await ApiClientService.GetBulletins();
            if (result != null)
            {
                bulletins = result;
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "An error occurred while loading bulletins");
            _errorMessage = "An error occurred while loading bulletins.";
        }
    }

    private async Task PostBulletinMessage()
    {
        if (!string.IsNullOrWhiteSpace(newMessage))
        {
            var newBulletin = new Bulletin
            {
                Message = newMessage,
                Date = DateTime.Now
            };

            try
            {
                await ApiClientService.AddBulletin(newBulletin);
                bulletins.Add(newBulletin);
                newMessage = string.Empty;
            }
            catch (Exception ex)
            {
                Logger.LogError(ex, "An error occurred while posting the bulletin message");
                _errorMessage = "An error occurred while posting the bulletin message.";
            }
        }
    }
}