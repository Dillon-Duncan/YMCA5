@page "/volunteer"
@using Microsoft.Extensions.Logging
@using YMCA3.Models
@using YMCA3.YmcaApiClient.Models.ApiModels
@using YmcaApiClient
@inject YmcaApiClientService ApiClientService
@inject ILogger<Volunteer> Logger
@inject UserStateService UserStateService
@inject NavigationManager NavigationManager

<div class="content px-4 d-flex flex-column justify-content-center align-items-center" style="height: 100vh; margin-bottom: 25px;">
    <div class="text-center mb-4">
        <h3>Volunteer</h3>
    </div>

    <div style="max-width: 600px; width: 100%;">
        <form @onsubmit="SubmitVolunteerStatus">
            <div class="mb-4">
                <h5>Confirm Your Contact Information</h5>
                <div class="mb-3">
                    <input type="text" id="fullName" class="form-control form-control-lg shadow" placeholder="Full Name" />
                </div>

                <div class="mb-3">
                    <input type="email" id="email" class="form-control form-control-lg shadow" placeholder="Email Address" />
                </div>

                <div class="mb-3">
                    <input type="text" id="phone" class="form-control form-control-lg shadow" placeholder="Phone Number" />
                </div>
            </div>

            <div class="mb-4">
                <h5>Select Your Available Days</h5>
                <div class="d-flex flex-wrap">
                    <div class="form-check me-3 mb-2">
                        <input type="checkbox" id="monday" class="form-check-input" />
                        <label for="monday" class="form-check-label">Monday</label>
                    </div>

                    <div class="form-check me-3 mb-2">
                        <input type="checkbox" id="tuesday" class="form-check-input" />
                        <label for="tuesday" class="form-check-label">Tuesday</label>
                    </div>

                    <div class="form-check me-3 mb-2">
                        <input type="checkbox" id="wednesday" class="form-check-input" />
                        <label for="wednesday" class="form-check-label">Wednesday</label>
                    </div>

                    <div class="form-check me-3 mb-2">
                        <input type="checkbox" id="thursday" class="form-check-input" />
                        <label for="thursday" class="form-check-label">Thursday</label>
                    </div>

                    <div class="form-check me-3 mb-2">
                        <input type="checkbox" id="friday" class="form-check-input" />
                        <label for="friday" class="form-check-label">Friday</label>
                    </div>

                    <div class="form-check me-3 mb-2">
                        <input type="checkbox" id="saturday" class="form-check-input" />
                        <label for="saturday" class="form-check-label">Saturday</label>
                    </div>

                    <div class="form-check me-3 mb-2">
                        <input type="checkbox" id="sunday" class="form-check-input" />
                        <label for="sunday" class="form-check-label">Sunday</label>
                    </div>
                </div>
            </div>

            <div class="text-center">
                <button type="submit" class="btn btn-primary btn-lg shadow" style="background-color: #EC1F26; border-color: #EC1F26;">Submit</button>
            </div>
        </form>
    </div>

    @if (!string.IsNullOrEmpty(_successMessage))
    {
        <div class="alert alert-success mt-3">@_successMessage</div>
    }

    @if (!string.IsNullOrEmpty(_errorMessage))
    {
        <div class="alert alert-danger mt-3">@_errorMessage</div>
    }
</div>

@code {
    private string _successMessage;
    private string _errorMessage;

    private async Task SubmitVolunteerStatus()
    {
        try
        {
            var loggedInUsername = UserStateService.LoggedUser?.Username;

            if (string.IsNullOrEmpty(loggedInUsername))
            {
                _errorMessage = "Unable to identify the logged-in user.";
                return;
            }

            // Search for the user in the database
            var users = await ApiClientService.GetUsers();
            var userToUpdate = users?.FirstOrDefault(u => u.Username == loggedInUsername);

            if (userToUpdate == null)
            {
                _errorMessage = "Logged-in user not found.";
                return;
            }

            // Update the volunteer status
            userToUpdate.Volunteer = true;
            await ApiClientService.UpdateUser(userToUpdate);

            _successMessage = "Thank you for volunteering! Your status has been updated.";
            _errorMessage = string.Empty;
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "An error occurred while updating the volunteer status.");
            _errorMessage = "An error occurred while updating your volunteer status. Please try again.";
            _successMessage = string.Empty;
        }
    }
}
