@page "/chatting/{chatId:int}"
@using YmcaApiClient
@inject YmcaApiClientService ApiClientService
@using Microsoft.Extensions.Logging
@inject ILogger<Chatting> Logger
@inject NavigationManager NavigationManager

<div class="content px-4 d-flex flex-column justify-content-center align-items-center" style="height: 100vh; margin-bottom: 25px;">
    <div class="text-center mb-4">
        <h2>Chatting</h2>
    </div>
    <div class="chat-content border p-3 rounded mb-3" style="flex-grow: 1; overflow-y: auto;">
        @foreach (var chatMessage in chatMessages)
        {
            <div class="d-flex mb-2">
                {
                    <div class="ms-auto sent-message p-2 rounded bg-primary text-white" style="max-width: 70%;">
                        <p class="mb-1">@chatMessage.Text</p>
                        <small class="text-light">@chatMessage..ToString("HH:mm")</small>
                    </div>
                }
            </div>
        }
    </div>
    <div class="chat-input d-flex">
        <input @bind="newMessage" @bind:event="oninput" type="text" class="form-control me-2" placeholder="Type a message..." />
        <button class="btn btn-primary" style="background-color: #EC1F26; border-color: #EC1F26;" @onclick="SendMessage">Send</button>
    </div>
    @if (!string.IsNullOrEmpty(_errorMessage))
    {
        <div class="alert alert-danger mt-3">@_errorMessage</div>
    }
</div>

@code {
    [Parameter]
    public int ChatId { get; set; }

    private string newMessage = string.Empty;
    private List<YmcaApiClient.Models.ApiModels.Message> chatMessages = new();
    private string _errorMessage;

    protected override async Task OnInitializedAsync()
    {
        await LoadChatMessages();
    }

    private async Task LoadChatMessages()
    {
        try
        {
            var chat = await ApiClientService.GetChatById(ChatId);
            if (chat != null)
            {
            //    chatMessages = chat.Messages;
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "An error occurred while loading chat messages");
            _errorMessage = "An error occurred while loading chat messages.";
        }
    }

    private async Task SendMessage()
    {
        if (!string.IsNullOrWhiteSpace(newMessage))
        {
            var newChatMessage = new YmcaApiClient.Models.ApiModels.Message
			{
				Text = newMessage
			};

            try
            {
                newMessage = string.Empty;
            }
            catch (Exception ex)
            {
                Logger.LogError(ex, "An error occurred while sending the message");
                _errorMessage = "An error occurred while sending the message.";
            }
        }
    }
}