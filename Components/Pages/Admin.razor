@page "/admin"
@using YmcaApiClient
@inject YmcaApiClientService ApiClientService
@using Microsoft.Extensions.Logging
@inject ILogger<Admin> Logger

<style>
    /* Partial-page background */
    .background {
        position: fixed;
        top: 0;
        left: 240px; /* Adjust this value to start the background image to the right of the sidebar */
        width: calc(100% - 200px); /* Reduce width to account for sidebar width */
        height: 100%;
        background-image: url('/blur-background.ico');
        background-size: cover;
        background-repeat: no-repeat;
        background-position: center;
        z-index: -1; /* Place background behind the content */
    }

    /* Content area styling */
    .content {
        position: relative;
        z-index: 1; /* Ensure content is on top of the background */
    }
</style>

<!-- Background Image Div -->
<div class="background"></div>

<div class="content px-4 d-flex flex-column justify-content-center align-items-center" style="height: 100vh; margin-bottom: 25px;">
    <div class="text-center mb-4">
        <h2>Admin Panel</h2>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-md-4 mb-4 d-flex flex-column">
                <h4 class="text-center" style="height: 60px;">Post Message to Bulletin Board</h4>
                <textarea @bind="newBulletinMessage" class="form-control mb-3 flex-grow-1" rows="4" placeholder="Type your message here..." style="min-width: 100%;"></textarea>
                <button class="btn btn-primary btn-block mt-auto" @onclick="PostBulletinMessage" style="background-color: #EC1F26; border-color: #EC1F26;" >Post Message</button>
            </div>

            <div class="col-md-4 mb-4 d-flex flex-column">
                <h4 class="text-center" style="height: 60px;">Add Event to Calendar</h4>
                <input type="text" @bind="newEventTitle" class="form-control mb-3" placeholder="Event Title" style="min-width: 100%;" />
                <input type="date" @bind="newEventDate" class="form-control mb-3" style="min-width: 100%;" />
                <button class="btn btn-primary btn-block mt-auto" @onclick="AddCalendarEvent" style="background-color: #EC1F26; border-color: #EC1F26;" >Add Event</button>
            </div>

            <div class="col-md-4 mb-4 d-flex flex-column">
                <h4 class="text-center" style="height: 60px;">Add News Item</h4>
                <input type="text" @bind="newNewsTitle" class="form-control mb-3" placeholder="News Title" style="min-width: 100%;" />
                <textarea @bind="newNewsDescription" class="form-control mb-3 flex-grow-1" rows="3" placeholder="News Description" style="min-width: 100%;"></textarea>
                <input type="url" @bind="newNewsImageUrl" class="form-control mb-3" placeholder="Image URL" style="min-width: 100%;" />
                <button class="btn btn-primary btn-block mt-auto" @onclick="AddNewsItem" style="background-color: #EC1F26; border-color: #EC1F26;" >Add News Item</button>
            </div>
        </div>
    </div>
</div>

@code {
    private string newBulletinMessage;
    private string newEventTitle;
    private DateTime newEventDate = DateTime.Today;
    private string newNewsTitle;
    private string newNewsDescription;
    private string newNewsImageUrl;

    private async Task PostBulletinMessage()
    {
        if (!string.IsNullOrWhiteSpace(newBulletinMessage))
        {
            try
            {
                var bulletin = new Bulletin
                {
                    Message = newBulletinMessage,
                    Date = DateTime.Now
                };
                await ApiClientService.AddBulletin(bulletin);
                newBulletinMessage = string.Empty;
            }
            catch (Exception ex)
            {
                Logger.LogError(ex, "An error occurred while posting a bulletin message");
            }
        }
    }

    private async Task AddCalendarEvent()
    {
        if (!string.IsNullOrWhiteSpace(newEventTitle) && newEventDate != default)
        {
            try
            {
                var @event = new Event
                {
                    Title = newEventTitle,
                    Date = newEventDate,
                    Description = "Event description" // Add a description if needed
                };
                await ApiClientService.AddEvent(@event);
                newEventTitle = string.Empty;
                newEventDate = DateTime.Today;
            }
            catch (Exception ex)
            {
                Logger.LogError(ex, "An error occurred while adding a calendar event");
            }
        }
    }

    private async Task AddNewsItem()
    {
        if (!string.IsNullOrWhiteSpace(newNewsTitle) && !string.IsNullOrWhiteSpace(newNewsDescription) && !string.IsNullOrWhiteSpace(newNewsImageUrl))
        {
            try
            {
                var news = new YmcaApiClient.News
                {
                    Headline = newNewsTitle,
                    Description = newNewsDescription,
                    Image = newNewsImageUrl,
                    Date = DateTime.Now
                };
                await ApiClientService.AddNews(news);
                newNewsTitle = string.Empty;
                newNewsDescription = string.Empty;
                newNewsImageUrl = string.Empty;
            }
            catch (Exception ex)
            {
                Logger.LogError(ex, "An error occurred while adding a news item");
            }
        }
    }
}